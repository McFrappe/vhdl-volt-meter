# # Created by https://www.toptal.com/developers/gitignore/api/xilinxise,xilinx,xilinxvivado,emacs,vim,macos,windows,linux,visualstudiocode,visualstudio
# # Edit at https://www.toptal.com/developers/gitignore?templates=xilinxise,xilinx,xilinxvivado,emacs,vim,macos,windows,linux,visualstudiocode,visualstudio

# ### Emacs ###
# # -*- mode: gitignore; -*-
# *~
# \#*\#
# /.emacs.desktop
# /.emacs.desktop.lock
# *.elc
# auto-save-list
# tramp
# .\#*

# # Org-mode
# .org-id-locations
# *_archive

# # flymake-mode
# *_flymake.*

# # eshell files
# /eshell/history
# /eshell/lastdir

# # elpa packages
# /elpa/

# # reftex files
# *.rel

# # AUCTeX auto folder
# /auto/

# # cask packages
# .cask/
# dist/

# # Flycheck
# flycheck_*.el

# # server auth directory
# /server/

# # projectiles files
# .projectile

# # directory configuration
# .dir-locals.el

# # network security
# /network-security.data


# ### Linux ###

# # temporary files which can be created if a process still has a handle open of a deleted file
# .fuse_hidden*

# # KDE directory preferences
# .directory

# # Linux trash folder which might appear on any partition or disk
# .Trash-*

# # .nfs files are created when an open file is removed but is still being accessed
# .nfs*

# ### macOS ###
# General
.DS_Store
.AppleDouble
.LSOverride

# Icon must end with two \r
Icon


# Thumbnails
._*

# Files that might appear in the root of a volume
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# Directories potentially created on remote AFP share
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

### macOS Patch ###
# iCloud generated files
*.icloud

### Vim ###
# Swap
[._]*.s[a-v][a-z]
!*.svg  # comment out if you don't need vector files
[._]*.sw[a-p]
[._]s[a-rt-v][a-z]
[._]ss[a-gi-z]
[._]sw[a-p]

# Session
Session.vim
Sessionx.vim

# Temporary
.netrwhist
# Auto-generated tag files
tags
# Persistent undo
[._]*.un~

### VisualStudioCode ###
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
!.vscode/*.code-snippets

# Local History for Visual Studio Code
.history/

# Built Visual Studio Code Extensions
*.vsix

### VisualStudioCode Patch ###
# Ignore all local history of files
.history
.ionide

# ### Windows ###
# # Windows thumbnail cache files
# Thumbs.db
# Thumbs.db:encryptable
# ehthumbs.db
# ehthumbs_vista.db

# # Dump file
# *.stackdump

# # Folder config file
# [Dd]esktop.ini

# # Recycle Bin used on file shares
# $RECYCLE.BIN/

# # Windows Installer files
# *.cab
# *.msi
# *.msix
# *.msm
# *.msp

# # Windows shortcuts
# *.lnk

# ### Xilinx ###
# # gitignore template for Xilinx Vivado Design Suite
# # website: https://www.xilinx.com/support/download.html

# # [home]
# *.jou
# *.log
# *.debug
# *.str
# *.zip
# *.tmp
# *.rst
# *.os
# *.js
# *.pb
# *.dcp
# *.hwdef
# *.vds
# *.veo
# *.wdf
# *.vdi
# *.dmp
# *.rpx
# *.rpt
# *_stub.v
# *_stub.vhdl
# *_funcsim.v
# *_funcsim.vhdl
# .project

# # [dir]
# *.cache
# .metadata
# *.data
# *.ipdefs
# .Xil
# *.sdk
# *.hw
# *.ip_user_files

# ### IP synth
# *_synth_*

# .jobs

# ### project synth
# */*.runs/synth*/*.xml
# */*.runs/synth*/*.txt
# */*.runs/synth*/*.sh
# */*.runs/synth*/*.tcl
# */*.runs/synth*/*.bat
# */*.runs/synth*/*.xdc
# !*/*.runs/synth*/*utilization*.rpt

# *.runs/synth*/*.xml
# *.runs/synth*/*.txt
# *.runs/synth*/*.sh
# *.runs/synth*/*.tcl
# *.runs/synth*/*.bat
# *.runs/synth*/*.xdc
# !*.runs/synth*/*utilization*.rpt

# ### project impl
# */*.runs/impl*/*.xml
# */*.runs/impl*/*.html
# */*.runs/impl*/*.txt
# */*.runs/impl*/*.sh
# */*.runs/impl*/*.tcl
# */*.runs/impl*/*.bat
# !*/*.runs/impl*/*utilization*.rpt

# *.runs/impl*/*.xml
# *.runs/impl*/*.html
# *.runs/impl*/*.txt
# *.runs/impl*/*.sh
# *.runs/impl*/*.tcl
# *.runs/impl*/*.bat
# !*.runs/impl*/*utilization*.rpt

# ### block design
# */*/bd/*/hdl
# */*/*/bd/*/hdl

# */*/bd/*/*.xdc
# */*/*/bd/*/*.xdc

# */*/bd/*/ip/*/*.xdc
# */*/*/bd/*/ip/*/*.xdc

# */*/bd/*/ip/*/*/
# */*/*/bd/*/ip/*/*/

# */*/bd/*/ip/*/*.vhd
# */*/*/bd/*/ip/*/*.vhd

# */*/bd/*/ip/*/*.xml
# */*/*/bd/*/ip/*/*.xml

# *.c
# *.h
# *.vho
# *.html
# */*/bd/*/ip/*/*.tcl
# */*/*/bd/*/ip/*/*.tcl
# hw_handoff
# ipshared

# ### XilinxISE ###
# # intermediate build files
# *.bgn
# *.bit
# *.bld
# *.cmd_log
# *.drc
# *.ll
# *.lso
# *.msd
# *.msk
# *.ncd
# *.ngc
# *.ngd
# *.ngr
# *.pad
# *.par
# *.pcf
# *.prj
# *.ptwx
# *.rbb
# *.rbd
# *.stx
# *.syr
# *.twr
# *.twx
# *.unroutes
# *.ut
# *.xpi
# *.xst
# *_bitgen.xwbt
# *_envsettings.html
# *_map.map
# *_map.mrp
# *_map.ngm
# *_map.xrpt
# *_ngdbuild.xrpt
# *_pad.csv
# *_pad.txt
# *_par.xrpt
# *_summary.html
# *_summary.xml
# *_usage.xml
# *_xst.xrpt

# # iMPACT generated files
# _impactbatch.log
# impact.xsl
# impact_impact.xwbt
# ise_impact.cmd
# webtalk_impact.xml

# # Core Generator generated files
# xaw2verilog.log

# # project-wide generated files
# *.gise
# par_usage_statistics.html
# usage_statistics_webtalk.html
# webtalk.log
# webtalk_pn.xml

# # generated folders
# iseconfig/
# xlnx_auto_0_xdb/
# xst/
# _ngo/
# _xmsgs/

# ### XilinxVivado ###
# #########################################################################################################
# ##	This is an example .gitignore file for Vivado, please treat it as an example as
# ##	it might not be complete. In addition, XAPP 1165 should be followed.
# #########
# #Exclude all
# *
# !*/
# !.gitignore
# ###########################################################################
# ##	VIVADO
# #Source files:
# #Do NOT ignore VHDL, Verilog, block diagrams or EDIF files.
# !*.vhd
# !*.v
# !*.bd
# !*.edif
# #IP files
# #.xci: IP-core property file with core container disabled
# !*.xci
# #*.dcp (checkpoint files: better be ignored!)
# #!*.dcp
# !*.vds
# !*.pb
# #All bd comments and layout coordinates are stored within .ui
# !*.ui
# !*.ooc
# #System Generator
# !*.mdl
# !*.slx
# !*.bxml
# #Simulation logic analyzer
# !*.wcfg
# !*.coe
# #MIG
# !*.prj
# !*.mem
# #Project files
# #XPR  +  *.XML ? XPR (Files are merged into a single XPR file for 2014.1 version)
# #Do NOT ignore *.xpr files
# !*.xpr
# #Include *.xml files for 2013.4 or earlier version
# !*.xml
# #Constraint files
# #Do NOT ignore *.xdc files
# !*.xdc
# #TCL - files
# !*.tcl
# #Journal - files
# !*.jou
# #Reports
# !*.rpt
# !*.txt
# !*.vdi
# #C-files
# !*.c
# !*.h
# !*.elf
# !*.bmm
# !*.xmp

# ### VisualStudio ###
# ## Ignore Visual Studio temporary files, build results, and
# ## files generated by popular Visual Studio add-ons.
# ##
# ## Get latest from https://github.com/github/gitignore/blob/main/VisualStudio.gitignore

# # User-specific files
# *.rsuser
# *.suo
# *.user
# *.userosscache
# *.sln.docstates

# # User-specific files (MonoDevelop/Xamarin Studio)
# *.userprefs

# # Mono auto generated files
# mono_crash.*

# # Build results
# [Dd]ebug/
# [Dd]ebugPublic/
# [Rr]elease/
# [Rr]eleases/
# x64/
# x86/
# [Ww][Ii][Nn]32/
# [Aa][Rr][Mm]/
# [Aa][Rr][Mm]64/
# bld/
# [Bb]in/
# [Oo]bj/
# [Ll]og/
# [Ll]ogs/

# # Visual Studio 2015/2017 cache/options directory
# .vs/
# # Uncomment if you have tasks that create the project's static files in wwwroot
# #wwwroot/

# # Visual Studio 2017 auto generated files
# Generated\ Files/

# # MSTest test Results
# [Tt]est[Rr]esult*/
# [Bb]uild[Ll]og.*

# # NUnit
# *.VisualState.xml
# TestResult.xml
# nunit-*.xml

# # Build Results of an ATL Project
# [Dd]ebugPS/
# [Rr]eleasePS/
# dlldata.c

# # Benchmark Results
# BenchmarkDotNet.Artifacts/

# # .NET Core
# project.lock.json
# project.fragment.lock.json
# artifacts/

# # ASP.NET Scaffolding
# ScaffoldingReadMe.txt

# # StyleCop
# StyleCopReport.xml

# # Files built by Visual Studio
# *_i.c
# *_p.c
# *_h.h
# *.ilk
# *.meta
# *.obj
# *.iobj
# *.pch
# *.pdb
# *.ipdb
# *.pgc
# *.pgd
# *.rsp
# *.sbr
# *.tlb
# *.tli
# *.tlh
# *.tmp_proj
# *_wpftmp.csproj
# *.tlog
# *.vspscc
# *.vssscc
# .builds
# *.pidb
# *.svclog
# *.scc

# # Chutzpah Test files
# _Chutzpah*

# # Visual C++ cache files
# ipch/
# *.aps
# *.ncb
# *.opendb
# *.opensdf
# *.sdf
# *.cachefile
# *.VC.db
# *.VC.VC.opendb

# # Visual Studio profiler
# *.psess
# *.vsp
# *.vspx
# *.sap

# # Visual Studio Trace Files
# *.e2e

# # TFS 2012 Local Workspace
# $tf/

# # Guidance Automation Toolkit
# *.gpState

# # ReSharper is a .NET coding add-in
# _ReSharper*/
# *.[Rr]e[Ss]harper
# *.DotSettings.user

# # TeamCity is a build add-in
# _TeamCity*

# # DotCover is a Code Coverage Tool
# *.dotCover

# # AxoCover is a Code Coverage Tool
# .axoCover/*
# !.axoCover/settings.json

# # Coverlet is a free, cross platform Code Coverage Tool
# coverage*.json
# coverage*.xml
# coverage*.info

# # Visual Studio code coverage results
# *.coverage
# *.coveragexml

# # NCrunch
# _NCrunch_*
# .*crunch*.local.xml
# nCrunchTemp_*

# # MightyMoose
# *.mm.*
# AutoTest.Net/

# # Web workbench (sass)
# .sass-cache/

# # Installshield output folder
# [Ee]xpress/

# # DocProject is a documentation generator add-in
# DocProject/buildhelp/
# DocProject/Help/*.HxT
# DocProject/Help/*.HxC
# DocProject/Help/*.hhc
# DocProject/Help/*.hhk
# DocProject/Help/*.hhp
# DocProject/Help/Html2
# DocProject/Help/html

# # Click-Once directory
# publish/

# # Publish Web Output
# *.[Pp]ublish.xml
# *.azurePubxml
# # Note: Comment the next line if you want to checkin your web deploy settings,
# # but database connection strings (with potential passwords) will be unencrypted
# *.pubxml
# *.publishproj

# # Microsoft Azure Web App publish settings. Comment the next line if you want to
# # checkin your Azure Web App publish settings, but sensitive information contained
# # in these scripts will be unencrypted
# PublishScripts/

# # NuGet Packages
# *.nupkg
# # NuGet Symbol Packages
# *.snupkg
# # The packages folder can be ignored because of Package Restore
# **/[Pp]ackages/*
# # except build/, which is used as an MSBuild target.
# !**/[Pp]ackages/build/
# # Uncomment if necessary however generally it will be regenerated when needed
# #!**/[Pp]ackages/repositories.config
# # NuGet v3's project.json files produces more ignorable files
# *.nuget.props
# *.nuget.targets

# # Microsoft Azure Build Output
# csx/
# *.build.csdef

# # Microsoft Azure Emulator
# ecf/
# rcf/

# # Windows Store app package directories and files
# AppPackages/
# BundleArtifacts/
# Package.StoreAssociation.xml
# _pkginfo.txt
# *.appx
# *.appxbundle
# *.appxupload

# # Visual Studio cache files
# # files ending in .cache can be ignored
# *.[Cc]ache
# # but keep track of directories ending in .cache
# !?*.[Cc]ache/

# # Others
# ClientBin/
# ~$*
# *.dbmdl
# *.dbproj.schemaview
# *.jfm
# *.pfx
# *.publishsettings
# orleans.codegen.cs

# # Including strong name files can present a security risk
# # (https://github.com/github/gitignore/pull/2483#issue-259490424)
# #*.snk

# # Since there are multiple workflows, uncomment next line to ignore bower_components
# # (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)
# #bower_components/

# # RIA/Silverlight projects
# Generated_Code/

# # Backup & report files from converting an old project file
# # to a newer Visual Studio version. Backup files are not needed,
# # because we have git ;-)
# _UpgradeReport_Files/
# Backup*/
# UpgradeLog*.XML
# UpgradeLog*.htm
# ServiceFabricBackup/
# *.rptproj.bak

# # SQL Server files
# *.mdf
# *.ldf
# *.ndf

# # Business Intelligence projects
# *.rdl.data
# *.bim.layout
# *.bim_*.settings
# *.rptproj.rsuser
# *- [Bb]ackup.rdl
# *- [Bb]ackup ([0-9]).rdl
# *- [Bb]ackup ([0-9][0-9]).rdl

# # Microsoft Fakes
# FakesAssemblies/

# # GhostDoc plugin setting file
# *.GhostDoc.xml

# # Node.js Tools for Visual Studio
# .ntvs_analysis.dat
# node_modules/

# # Visual Studio 6 build log
# *.plg

# # Visual Studio 6 workspace options file
# *.opt

# # Visual Studio 6 auto-generated workspace file (contains which files were open etc.)
# *.vbw

# # Visual Studio 6 auto-generated project file (contains which files were open etc.)
# *.vbp

# # Visual Studio 6 workspace and project file (working project files containing files to include in project)
# *.dsw
# *.dsp

# # Visual Studio 6 technical files

# # Visual Studio LightSwitch build output
# **/*.HTMLClient/GeneratedArtifacts
# **/*.DesktopClient/GeneratedArtifacts
# **/*.DesktopClient/ModelManifest.xml
# **/*.Server/GeneratedArtifacts
# **/*.Server/ModelManifest.xml
# _Pvt_Extensions

# # Paket dependency manager
# .paket/paket.exe
# paket-files/

# # FAKE - F# Make
# .fake/

# # CodeRush personal settings
# .cr/personal

# # Python Tools for Visual Studio (PTVS)
# __pycache__/
# *.pyc

# # Cake - Uncomment if you are using it
# # tools/**
# # !tools/packages.config

# # Tabs Studio
# *.tss

# # Telerik's JustMock configuration file
# *.jmconfig

# # BizTalk build output
# *.btp.cs
# *.btm.cs
# *.odx.cs
# *.xsd.cs

# # OpenCover UI analysis results
# OpenCover/

# # Azure Stream Analytics local run output
# ASALocalRun/

# # MSBuild Binary and Structured Log
# *.binlog

# # NVidia Nsight GPU debugger configuration file
# *.nvuser

# # MFractors (Xamarin productivity tool) working folder
# .mfractor/

# # Local History for Visual Studio
# .localhistory/

# # Visual Studio History (VSHistory) files
# .vshistory/

# # BeatPulse healthcheck temp database
# healthchecksdb

# # Backup folder for Package Reference Convert tool in Visual Studio 2017
# MigrationBackup/

# # Ionide (cross platform F# VS Code tools) working folder
# .ionide/

# # Fody - auto-generated XML schema
# FodyWeavers.xsd

# # VS Code files for those working on multiple tools
# *.code-workspace

# # Local History for Visual Studio Code

# # Windows Installer files from build outputs

# # JetBrains Rider
# *.sln.iml

### VisualStudio Patch ###
# Additional files built by Visual Studio

# End of https://www.toptal.com/developers/gitignore/api/xilinxise,xilinx,xilinxvivado,emacs,vim,macos,windows,linux,visualstudiocode,visualstudio

### Quartus ###
# Working with Altera Quartus II (Q2) and do proper versioning is not that easy
# but if you follow some rules it can be accomplished. :)
# This file should be placed into the main directory where the .qpf file is
# found. Generally Q2 throws all entities and so on in the main directory, but
# you can place all stuff also in separate folders. This approach is followed
# here. So when you create a new design create one or more folders where your
# entities will be located and put a .gitignore in there that overrides the
# ignores of this file, e.g. one single rule stating "!*" which allows now all
# type of files. When you add a MegaFunction or another entity to your design,
# simply add it to one of your private folders and Q2 will be happy and manage
# everything quite good. When you want to do versioning of your generated
# SOF/POF files, you can do this by redirecting the generated output to an own
# folder. To do this go to:
# "Assignments"
# -> "Settings
# -> "Compilation Process Settings"
# -> "Save project output files in specified directory"
# Now you can either place a .gitignore in the directory and allow the following
# list of types:
# !*.sof
# !*.pof
# or you create an own submodule in the folder to keep binary files out of your
# design.

# Need to keep all HDL files
# *.vhd
# *.v

# ignore Quartus II generated files
*_generation_script*
*_inst.vhd
*.bak
*.cmp
*.done
*.eqn
*.hex
*.html
*.jdi
*.jpg
*.mif
*.pin
*.pof
*.ptf.*
*.qar
*.qarlog
*.qws
*.rpt
*.smsg
*.sof
*.sopc_builder
*.summary
*.tcl
*.txt # Explicitly add any text files used
*~
*example*
*sopc_*
# *.sdc # I want those timing files

# ignore Quartus II generated folders
*/*/db/
*/incremental_db/
*/simulation/*
!*/simulation/modelsim
*/simulation/modelsim/*
!*/simulation/modelsim/*.vht
*/timing/
*/testbench/
*/*_sim/